spacez_manager_task:
  description: >
    Route `{space_query}` to the appropriate agent.
    - If `{space_query}` is related to **space missions**, send it to the **spacez_mission_agent**.
    - If `{space_query}` is related to **satellite launches and data**, send it to the **spacez_satellite_data_agent**.
    - If `{space_query}` is related to **celestial object or events**, send it to the **spacez_celestial_events_agent**.
    - If `{space_query}` is related to **research papers**, send it to the **spacez_research_papers_agent**.
    - Execution **stops immediately** after receiving a response.
  expected_output: >
    - `{space_query}` is sent to **only one agent**.
    - The response is stored in `{research_response}`.
    - Execution **stops immediately** after the first valid `{research_response}` is received.
  agent: spacez_manager
  inputs:
    research_response: "{research_response}"  

space_mission_agent_task:
  description: >
    As a space mission specialist, find out all details about space missions related to `{space_query}` for `{role}`.
  expected_output: >
    - If `{research_response}` contains `"no result"`, `"not found"`, or `"error"`, set `{research_response}` as:
      `"We apologize, but we have no information at this moment. Your query has been forwarded to the backend team for further research."`
    - Otherwise, append the tool response to `{research_response}`.
  agent: spacez_mission_agent
  inputs:
    role: "{role}"
    query: "{space_query}"
    research_response: "{research_response}" 

satellite_data_agent_task:
  description: >
    As a satellite data specialist, conduct thorough research about `{space_query}` for `{role}`.
  expected_output: >
    - If `{research_response}` contains `"no result"`, `"not found"`, or `"error"`, set `{research_response}` as:
      `"We apologize, but we have no information at this moment. Your query has been forwarded to the backend team for further research."`
    - Append tool final answer into `{research_response}` and return to `spacez_manager`.  
  agent: spacez_satellite_data_agent 
  inputs:
    research_response: "{research_response}"  # ✅ Pass existing responses

celestial_events_agent_task:
  description: >
    As a `{role}`, conduct thorough research about `{space_query}`.
  expected_output: >
    - If `{research_response}` contains `"no result"`, `"not found"`, or `"error"`, set `{research_response}` as:
      `"We apologize, but we have no information at this moment. Your query has been forwarded to the backend team for further research."`
    - Append tool final answer into `{research_response}` and return to `spacez_manager`.  
  agent: spacez_celestial_events_agent
  inputs:
    research_response: "{research_response}"  # ✅ Pass existing responses

research_papers_agent_task:
  description: >
    As an information specialist for `{role}`, conduct thorough research about `{space_query}` and return a structured list.
  expected_output: >
    - If `{research_response}` contains `"no result"`, `"not found"`, or `"error"`, set `{research_response}` as:
      `"We apologize, but we have no information at this moment. Your query has been forwarded to the backend team for further research."`
    - Append tool final answer into `{research_response}` in **bullet format** and return to `spacez_manager`.
    - The final response should be **structured** like:
      |
      - Research Paper 1: [Title] (URL)
      - Research Paper 2: [Title] (URL)

  agent: spacez_research_papers_agent 
  inputs:
    research_response: "{research_response}"  # ✅ Pass existing responses

slack_notification_task:
  description: >
    Post `{space_query}` and `{research_response}` to Slack channel random 
  expected_output: >
    - Post `{space_query}` and `{research_response}` to Slack **only if unanswered**.
    - Format the message in **Markdown** using triple backticks (` ``` `).
  agent: feedback_agent
  inputs:
    channel: "random"
    message: '```\n{space_query} \n\n{research_response}\n```'
    research_response: "{research_response}" 

